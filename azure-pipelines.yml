# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - "webapp/*"

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: "27aa7f04-dcb2-48f3-9b87-0e295689f41b"

  # Web app name
  webAppName: "flask-ml-uda-proj2"

  # Agent VM image name
  poolName: "Default"

  # Environment name
  environmentName: "flask-ml-uda-proj2"

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.8.10
  pythonVersion: "3.8.10"

  # Workspace directory
  workspaceDir: "webapp/flask-sklearn"

pool: "$(poolName)"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildJob
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "$(pythonVersion)"
            displayName: "Use Python $(pythonVersion)"

          - script: |
              pwd
              ls -la
            workingDirectory: $(projectRoot)/$(workspaceDir)
            displayName: "Verify build environment"

          - script: |
              python -m venv antenv
              source antenv/bin/activate
              python -m pip install --upgrade pip
              pip install setup
              pip install -r requirements.txt
              deactivate
            workingDirectory: $(projectRoot)/$(workspaceDir)
            displayName: "Install requirements"

          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(projectRoot)/$(workspaceDir)"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            displayName: "Upload package"
            artifact: drop

  - stage: Deploy
    displayName: "Deploy Web App"
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeploymentJob
        pool: "$(poolName)"
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: UsePythonVersion@0
                  inputs:
                    versionSpec: "$(pythonVersion)"
                  displayName: "Use Python version"

                - task: AzureWebApp@1
                  displayName: "Deploy Azure Web App : flask-ml-uda-proj2"
                  inputs:
                    azureSubscription: $(azureServiceConnectionId)
                    appName: $(webAppName)
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
